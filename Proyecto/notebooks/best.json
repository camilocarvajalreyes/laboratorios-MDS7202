{'classifier': MLPClassifier(hidden_layer_sizes=(200,), learning_rate_init=0.01, solver='sgd'),
 'classifier__hidden_layer_sizes': (200,),
 'classifier__learning_rate': 'constant',
 'classifier__learning_rate_init': 0.01,
 'classifier__solver': 'sgd',
 'procesamiento': ColumnTransformer(transformers=[('BoC-plat',
                                  CountVectorizer(min_df=0.05,
                                                  tokenizer=<__main__.CategoriesTokenizer object at 0x7f55bb42f910>),
                                  'platforms'),
                                 ('BoC-cat',
                                  CountVectorizer(min_df=0.05,
                                                  tokenizer=<__main__.CategoriesTokenizer object at 0x7f55bb42f910>),
                                  'categories'),
                                 ('BoC-genres',
                                  CountVectorizer(min_df=0.05,
                                                  tokenizer=<__main__.CategoriesTokenizer obj...
                                                  tokenizer=<__main__.CategoriesTokenizer object at 0x7f55bb42f220>),
                                  'publisher'),
                                 ('OneHotEncoder',
                                  OneHotEncoder(handle_unknown='ignore'),
                                  ['month']),
                                 ('MinMaxScaler', MinMaxScaler(),
                                  ['required_age', 'price', 'release_date']),
                                 ('BoxCox', PowerTransformer(),
                                  ['achievements', 'average_playtime',
                                   'revenue']),
                                 ('unchanged', Nothing(),
                                  ['english', 'bert1', 'bert2', 'bert3', 'bert4',
                                   'bert5'])]),
 'procesamiento__BoC-cat__min_df': 0.05,
 'procesamiento__BoC-dev__min_df': 0,
 'procesamiento__BoC-genres__min_df': 0.05,
 'procesamiento__BoC-pub__min_df': 0,
 'procesamiento__BoC-tags__min_df': 0.05,
 'selector__percentile': 95,
 'selector__score_func': <function sklearn.feature_selection._univariate_selection.f_classif(X, y)>}